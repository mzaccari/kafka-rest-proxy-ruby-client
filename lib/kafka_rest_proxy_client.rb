=begin
#Kafka REST Proxy API

#An initial draft of the [Kafka REST Proxy API](https://github.com/confluentinc/kafka-rest).  ## Example JSON request   ``` POST /topics/test HTTP/1.1 Host: kafkaproxy.example.com Content-Type: application/vnd.kafka.json.v2+json Accept: application/vnd.kafka.json.v2+json, application/vnd.kafka+json, application/json {   \"records\": [     {       \"key\": \"somekey\",       \"value\": {\"foo\": \"bar\"}     },     {       \"value\": [ \"foo\", \"bar\" ],       \"partition\": 1     },     {       \"value\": 53.5     }   ] } ```  ## Example JSON response  ``` HTTP/1.1 200 OK Content-Type: application/vnd.kafka.json.v2+json {   \"key_schema_id\": null,   \"value_schema_id\": null,   \"offsets\": [     {       \"partition\": 2,       \"offset\": 100     },     {       \"partition\": 1,       \"offset\": 101     },     {       \"partition\": 2,       \"offset\": 102     }   ] } ```

OpenAPI spec version: 0.1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

# Common files
require 'kafka_rest_proxy_client/api_client'
require 'kafka_rest_proxy_client/api_error'
require 'kafka_rest_proxy_client/version'
require 'kafka_rest_proxy_client/configuration'

# Models
require 'kafka_rest_proxy_client/models/body'
require 'kafka_rest_proxy_client/models/inline_response_200'
require 'kafka_rest_proxy_client/models/inline_response_200_offsets'
require 'kafka_rest_proxy_client/models/offset'
require 'kafka_rest_proxy_client/models/producer_request'
require 'kafka_rest_proxy_client/models/producer_response'
require 'kafka_rest_proxy_client/models/record'
require 'kafka_rest_proxy_client/models/topicstopic_name_records'

# APIs
require 'kafka_rest_proxy_client/api/producer_api'

module KafkaProxyRestClient

  class << self
    # Customize default settings for the SDK using block.
    #   KafkaProxyRestClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
